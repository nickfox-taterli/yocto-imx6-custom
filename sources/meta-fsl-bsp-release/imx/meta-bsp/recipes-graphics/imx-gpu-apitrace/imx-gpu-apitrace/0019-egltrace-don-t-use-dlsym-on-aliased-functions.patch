From f5a450353de6bc8005e76b4babd9f7b4a13f796d Mon Sep 17 00:00:00 2001
From: Yuchou Gan <yuchou.gan@nxp.com>
Date: Thu, 19 Jan 2017 11:58:21 +0200
Subject: [PATCH 19/31] egltrace: don't use dlsym on aliased functions

Vivante driver uses function aliases for following OES/EXT:

Extension API alias for GL_OES_texture_3D
	glTexImage3DOES               glTexImage3D
	glTexSubImage3DOES            glTexSubImage3D
	glCopyTexSubImage3DOES        glCopyTexSubImage3D
	glCompressedTexImage3DOES     glCompressedTexImage3D
	glCompressedTexSubImage3DOES  glCompressedTexSubImage3D

Extension API alias for GL_OES_get_program_binary
	glGetProgramBinaryOES         glGetProgramBinary
	glProgramBinaryOES            glProgramBinary

Extension API alias for GL_OES_vertex_array_object
	glBindVertexArrayOES          glBindVertexArray
	glDeleteVertexArraysOES       glDeleteVertexArrays
	glGenVertexArraysOES          glGenVertexArrays
	glIsVertexArrayOES            glIsVertexArray

Extension API alias for GL_OES_blend_minmax
	glBlendEquationEXT            glBlendEquation
---
 wrappers/egltrace.py | 40 ++++++++++++++++++++++++++++++++++++++++
 1 file changed, 40 insertions(+)

diff --git a/wrappers/egltrace.py b/wrappers/egltrace.py
index 7d2d182..c7720bb 100644
--- a/wrappers/egltrace.py
+++ b/wrappers/egltrace.py
@@ -49,6 +49,9 @@ class EglTracer(GlTracer):
     ]
 
     def traceFunctionImplBody(self, function):
+        if function.name == 'eglGetProcAddress':
+            print '    procname = __get_alias_func_name(procname);'
+
         GlTracer.traceFunctionImplBody(self, function)
 
         if function.name == 'eglCreateContext':
@@ -118,6 +121,43 @@ if __name__ == '__main__':
     print '#include "glsize.hpp"'
     print '#include "eglsize.hpp"'
     print
+    print 'static const char *__get_alias_func_name(const char *origFunName)'
+    print '{'
+    print '    /* Vivante driver uses alias name for following OES/EXT functions, that means dlsym for thoese functions will fail */'
+    print '    static const char * __glExtProcAlias[][2] ='
+    print '    {'
+    print '        /* Extension API alias for GL_OES_texture_3D */'
+    print '        {"glTexImage3DOES",               "glTexImage3D"},'
+    print '        {"glTexSubImage3DOES",            "glTexSubImage3D"},'
+    print '        {"glCopyTexSubImage3DOES",        "glCopyTexSubImage3D"},'
+    print '        {"glCompressedTexImage3DOES",     "glCompressedTexImage3D"},'
+    print '        {"glCompressedTexSubImage3DOES",  "glCompressedTexSubImage3D"},'
+    print
+    print '        /* Extension API alias for GL_OES_get_program_binary */'
+    print '        {"glGetProgramBinaryOES",         "glGetProgramBinary"},'
+    print '        {"glProgramBinaryOES",            "glProgramBinary"},'
+    print
+    print '        /* Extension API alias for GL_OES_vertex_array_object */'
+    print '        {"glBindVertexArrayOES",          "glBindVertexArray"},'
+    print '        {"glDeleteVertexArraysOES",       "glDeleteVertexArrays"},'
+    print '        {"glGenVertexArraysOES",          "glGenVertexArrays"},'
+    print '        {"glIsVertexArrayOES",            "glIsVertexArray"},'
+    print
+    print '        /* Extension API alias for GL_OES_blend_minmax */'
+    print '        {"glBlendEquationEXT",            "glBlendEquation"}'
+    print '    };'
+    print
+    print '    int count = sizeof(__glExtProcAlias) / sizeof(__glExtProcAlias[0]);'
+    print '    int i;'
+    print
+    print '    for(i=0; i<count; i++)'
+    print '    {'
+    print '        if(strcmp(__glExtProcAlias[i][0], origFunName) == 0)'
+    print '            return __glExtProcAlias[i][1];'
+    print '    }'
+    print
+    print '    return origFunName;'
+    print '}'
     
     module = Module()
     module.mergeModule(eglapi)
-- 
2.7.4

