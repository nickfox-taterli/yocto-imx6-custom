From ca7adb9cf57497d27136a599531ea5b9671876c7 Mon Sep 17 00:00:00 2001
From: Yashpal Dutta <yashpal.dutta@freescale.com>
Date: Wed, 16 Apr 2014 22:53:04 +0545
Subject: [PATCH 09/48] RSA Keygen Fix

Upstream-status: Pending

If Kernel driver doesn't support RSA Keygen or same returns
error handling the keygen operation, the keygen is gracefully
handled by software supported rsa_keygen handler

Signed-off-by: Yashpal Dutta <yashpal.dutta@freescale.com>
Tested-by: Cristian Stoica <cristian.stoica@freescale.com>
---
 crypto/engine/eng_cryptodev.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/crypto/engine/eng_cryptodev.c b/crypto/engine/eng_cryptodev.c
index 44017a3..eac5fb6 100644
--- a/crypto/engine/eng_cryptodev.c
+++ b/crypto/engine/eng_cryptodev.c
@@ -2018,7 +2018,7 @@ static int cryptodev_rsa_keygen(RSA *rsa, int bits, BIGNUM *e, BN_GENCB *cb)
     int i;
 
     if ((fd = get_asym_dev_crypto()) < 0)
-        return fd;
+        goto sw_try;
 
     if (!rsa->n && ((rsa->n = BN_new()) == NULL))
         goto err;
@@ -2047,7 +2047,7 @@ static int cryptodev_rsa_keygen(RSA *rsa, int bits, BIGNUM *e, BN_GENCB *cb)
     /* p length */
     kop.crk_param[kop.crk_iparams].crp_p = calloc(p_len + 1, sizeof(char));
     if (!kop.crk_param[kop.crk_iparams].crp_p)
-        goto err;
+        goto sw_try;
     kop.crk_param[kop.crk_iparams].crp_nbits = p_len * 8;
     memset(kop.crk_param[kop.crk_iparams].crp_p, 0xff, p_len + 1);
     kop.crk_iparams++;
@@ -2055,7 +2055,7 @@ static int cryptodev_rsa_keygen(RSA *rsa, int bits, BIGNUM *e, BN_GENCB *cb)
     /* q length */
     kop.crk_param[kop.crk_iparams].crp_p = calloc(q_len + 1, sizeof(char));
     if (!kop.crk_param[kop.crk_iparams].crp_p)
-        goto err;
+        goto sw_try;
     kop.crk_param[kop.crk_iparams].crp_nbits = q_len * 8;
     memset(kop.crk_param[kop.crk_iparams].crp_p, 0xff, q_len + 1);
     kop.crk_iparams++;
@@ -2115,8 +2115,10 @@ static int cryptodev_rsa_keygen(RSA *rsa, int bits, BIGNUM *e, BN_GENCB *cb)
     }
  sw_try:
     {
-        const RSA_METHOD *meth = RSA_PKCS1_SSLeay();
-        ret = (meth->rsa_keygen) (rsa, bits, e, cb);
+        const RSA_METHOD *meth = rsa->meth;
+        rsa->meth = RSA_PKCS1_SSLeay();
+        ret = RSA_generate_key_ex(rsa, bits, e, cb);
+        rsa->meth = meth;
     }
     return ret;
 
-- 
2.7.0

